######################################################################################
#              Exercício 1 (parte 1) - implementação do FBA
#     Com base no modelo estequiométrico iML1515 de E.coli substr. K-12 no formato SBML foi 
#     efetuada uma verificação da produção wild-type do composto de interesse: o acetato. 
# Grupo 2: (---nomes---)
####################################################################################

from mewpy.simulation import get_simulator
from cobra.io import read_sbml_model
from cobra.flux_analysis import flux_variability_analysis
import pandas
from time import time
import cobra.test
from cobra.flux_analysis import (
    single_gene_deletion, single_reaction_deletion, double_gene_deletion,
    double_reaction_deletion)
    


model = read_sbml_model('./iML1515.xml')                # criação do modelo
print(model.summary())                                  # sumário do modelo inicial

model.compartments                                      # Verificação dos compartimentos do modelo
# Existem 3 compartimentos: 
# c: citosol; e: espaço extracelular; p:periplasma

# Verificação das reações que envolvem o acetato do citosol - surgem 16 reações associadas:

acetato_c = model.metabolites.get_by_id('ac_c')
print(acetato_c.summary())                              # Acetato do citosol - wild type production, se nao tivermos em conta as restrições

acetato_p=model.metabolites.get_by_id('ac_p')
print(acetato_p.summary())                              # Acetato do periplasma
    
acetato_e =model.metabolites.get_by_id('ac_e')
print(acetato_e.summary())                              # Acetato extracelular

# Vendos os model.summary destes metabolitos podemos ver que não existe absorção do meio de acetato nem excreção para o meio. Pois nao existem reações que utilizem o acetato extraceular.
# Tambem nao existe nem consumo nem produção de acetato no periplasma.
# Existem  3 reações de produção de acetato e 1 de consumo de acetato.
# Isto sem adicionar nenhuma condição ao meio, ou seja sem fazer com o 0 uptake de oxigenio e o 15 uptake de glucose


cobra_model = model.copy()                              # Fazer uma cópia do modelo original
envcond = {'EX_glc__D_e': (-15,100000),  
           'EX_o2_e': (0,1000)}                         # Definição das condições ambientais
simul = get_simulator(cobra_model, envcond=envcond)     # Simulação com pFBA 
result = simul.simulate(method='pFBA')                  
print(result.data_frame)
